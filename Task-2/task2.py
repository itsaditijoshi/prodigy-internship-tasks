# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pOmmpmpUxzkAp9OWp1qxETX90Z0M-Tez

ðŸ”¹ Step 1: Import Required Libraries
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans

"""ðŸ”¹ Step 2: Load the Dataset


"""

df = pd.read_csv('Mall_Customers.csv')  # file name may vary slightly
df.head()

"""ðŸ”¹ Step 3: Explore the Data

"""

df.info()
df.describe()
sns.pairplot(df[['Annual Income (k$)', 'Spending Score (1-100)']])

"""ðŸ”¹ Step 4: Select Features for Clustering


"""

X = df[['Annual Income (k$)', 'Spending Score (1-100)']]  # You can try more features too

"""ðŸ”¹ Step 5: Find Optimal Number of Clusters (Elbow Method)


"""

wcss = []

for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)

plt.plot(range(1, 11), wcss, marker='o')
plt.title('Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.grid(True)
plt.show()

"""ðŸ”¹ Step 6: Apply K-Means Clustering

"""

kmeans = KMeans(n_clusters=5, init='k-means++', random_state=42)
y_kmeans = kmeans.fit_predict(X)

"""ðŸ”¹ Step 7: Visualize the Clusters


"""

plt.figure(figsize=(8, 6))
colors = ['red', 'blue', 'green', 'cyan', 'magenta']

for i in range(5):
    plt.scatter(X.values[y_kmeans == i, 0], X.values[y_kmeans == i, 1],
                s=100, c=colors[i], label=f'Cluster {i+1}')

plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1],
            s=200, c='yellow', label='Centroids', marker='X')
plt.title('Customer Segments')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1â€“100)')
plt.legend()
plt.grid(True)
plt.show()

df['Cluster'] = y_kmeans
df.to_csv('clustered_customers.csv', index=False)